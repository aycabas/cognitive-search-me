/**
 * @module botframework-connector
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { IJwtTokenProviderFactory } from './jwtTokenProviderFactory';
import { ServiceClientCredentials } from '@azure/ms-rest-js';
import { ServiceClientCredentialsFactory } from './serviceClientCredentialsFactory';
/**
 * A Managed Identity implementation of the [ServiceClientCredentialsFactory](xref:botframework-connector.ServiceClientCredentialsFactory) abstract class.
 */
export declare class ManagedIdentityServiceClientCredentialsFactory extends ServiceClientCredentialsFactory {
    private readonly appId;
    private readonly tokenProviderFactory;
    /**
     * Initializes a new instance of the ManagedIdentityServiceClientCredentialsFactory class.
     *
     * @param appId Client ID for the managed identity assigned to the bot.
     * @param tokenProviderFactory The JWT token provider factory to use.
     */
    constructor(appId: string, tokenProviderFactory: IJwtTokenProviderFactory);
    /**
     * @inheritdoc
     */
    isValidAppId(appId: string): Promise<boolean>;
    /**
     * @inheritdoc
     */
    isAuthenticationDisabled(): Promise<boolean>;
    /**
     * @inheritdoc
     */
    createCredentials(appId: string, audience: string): Promise<ServiceClientCredentials>;
}
//# sourceMappingURL=managedIdentityServiceClientCredentialsFactory.d.ts.map
