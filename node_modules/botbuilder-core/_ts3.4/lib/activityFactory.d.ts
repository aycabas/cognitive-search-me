/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Activity } from 'botframework-schema';
/**
 * The ActivityFactory
 * to generate text and then uses simple markdown semantics like chatdown to create Activity.
 */
export declare class ActivityFactory {
    private static readonly lgType;
    private static adaptiveCardType;
    private static readonly genericCardTypeMapping;
    private static readonly activityProperties;
    private static readonly cardActionProperties;
    private static readonly attachmentProperties;
    private static readonly cardProperties;
    /**
     * Generate the activity.
     *
     * @param lgResult string result from languageGenerator.
     * @returns The generated MessageActivity.
     */
    static fromObject(lgResult: any): Partial<Activity>;
    /**
     * Given a lg result, create a text activity. This method will create a MessageActivity from text.
     *
     * @param text lg text output.
     * @returns The created MessageActivity.
     */
    private static buildActivityFromText;
    /**
     * Given a structured lg result, create an activity. This method will create an MessageActivity from object
     *
     * @param lgValue lg output.
     * @returns The created MessageActivity.
     */
    private static buildActivityFromLGStructuredResult;
    /**
     * Builds an [Activity](xref:botframework-schema.Activity) with a given message.
     *
     * @param messageValue Message value on which to base the activity.
     * @returns [Activity](xref:botframework-schema.Activity) with the given message.
     */
    private static buildActivity;
    /**
     * @private
     */
    private static getSuggestions;
    /**
     * @private
     */
    private static getButtons;
    /**
     * @private
     */
    private static getCardActions;
    /**
     * @private
     */
    private static getCardAction;
    /**
     * @private
     */
    private static getAttachments;
    /**
     * @private
     */
    private static getAttachment;
    /**
     * @private
     */
    private static getNormalAttachment;
    /**
     * @private
     */
    private static getCardAttachment;
    /**
     * @private
     */
    private static realProperty;
    /**
     * @private
     */
    private static normalizedToList;
    /**
     * @private
     */
    private static getStructureType;
    /**
     * @private
     */
    private static normalizedToMediaOrImage;
    /**
     * @private
     */
    private static getValidBooleanValue;
}
//# sourceMappingURL=activityFactory.d.ts.map
