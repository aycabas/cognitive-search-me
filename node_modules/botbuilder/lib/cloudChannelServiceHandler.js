"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudChannelServiceHandler = void 0;
const channelServiceHandlerBase_1 = require("./channelServiceHandlerBase");
/**
 * A class to help with the implementation of the Bot Framework protocol using [BotFrameworkAuthentication](xref:botframework-connector.BotFrameworkAuthentication).
 */
class CloudChannelServiceHandler extends channelServiceHandlerBase_1.ChannelServiceHandlerBase {
    /**
     * @param auth Bot framework authentication
     */
    constructor(auth) {
        super();
        this.auth = auth;
    }
    authenticate(authHeader) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.auth.authenticateChannelRequest(authHeader);
        });
    }
}
exports.CloudChannelServiceHandler = CloudChannelServiceHandler;
//# sourceMappingURL=cloudChannelServiceHandler.js.map