/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { Activity, ConversationAccount, Transcript, TurnContext } from 'botbuilder-core';
/**
 * Contains utility methods for creating various event types.
 */
export declare class EventFactory {
    /**
     * Create handoff initiation event.
     *
     * @param context The context object for the turn.
     * @param handoffContext Agent hub-specific context.
     * @param transcript Transcript of the conversation.
     * @returns The handoff event activity.
     */
    static createHandoffInitiation<T = unknown>(context: TurnContext, handoffContext: T, transcript?: Transcript): Activity;
    /**
     * Create handoff status event.
     *
     * @param conversation Conversation being handed over.
     * @param state State, possible values are: "accepted", "failed", "completed".
     * @param message Additional message for failed handoff.
     * @returns The handoff event activity.
     */
    static createHandoffStatus(conversation: ConversationAccount, state: string, message?: string): Activity;
    /**
     * @private
     */
    private static createHandoffEvent;
}
//# sourceMappingURL=eventFactory.d.ts.map