/**
 * @module botframework-streaming
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { HttpContentStream } from '../httpContentStream';
import { IStreamWrapper } from '../interfaces';
import { PayloadDisassembler } from './payloadDisassembler';
import { PayloadTypes } from '../payloads';
import { PayloadSender } from '../payloadTransport';
/**
 * Disassembler for Http content stream
 */
export declare class HttpContentStreamDisassembler extends PayloadDisassembler {
    readonly contentStream: HttpContentStream;
    payloadType: PayloadTypes;
    /**
     * Initializes a new instance of the [HttpContentStreamDisassembler](xref:botframework-streaming.HttpContentStreamDisassembler) class.
     *
     * @param sender The [PayloadSender](xref:botframework-streaming.PayloadSender) to send the disassembled data to.
     * @param contentStream The [HttpContentStream](xref:botframework-streaming.HttpContentStream) to be disassembled.
     */
    constructor(sender: PayloadSender, contentStream: HttpContentStream);
    /**
     * Gets the stream this disassembler is operating on.
     *
     * @returns An [IStreamWrapper](xref:botframework-streaming.IStreamWrapper) with a Subscribable Strea.
     */
    getStream(): Promise<IStreamWrapper>;
}
//# sourceMappingURL=httpContentStreamDisassembler.d.ts.map
